###################################################################
##
## Name     : vmodcam_ctrl
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN vmodcam_ctrl

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IP_GROUP = MICROBLAZE:PPC:USER
OPTION DESC = VMODCAM_CTRL
OPTION LONG_DESC = Camera input controller, with VFBC as output interface.


## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_STD = PLBV46, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = VFBC_OUT, BUS_STD = XIL_VFBC, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = VMODCAM_IN, BUS_STD = VMODCAM, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x100, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = SPLB
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 128, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128)
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB, RANGE = (1:16)
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB, RANGE = (1:4)
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128), ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, RANGE = (0, 1)
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, RANGE = (0, 1), ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128)
PARAMETER C_SPLB_CLK_PERIOD_PS = 10000, DT = INTEGER, BUS = SPLB
PARAMETER C_INCLUDE_DPHASE_TIMER = 0, DT = INTEGER, RANGE = (0, 1)
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_VFBC_RDWD_DATA_WIDTH = 8, DT = INTEGER, BUS = VFBC_OUT, RANGE = (8, 16, 32, 64)

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB

# Control Signals
PORT Clk24M_I = "", DIR = I
PORT CLK24M_LOCKED_I = "", DIR = I
PORT DEBUG_O = "", DIR = O, VEC = [7:0]
# VFBC Cmd Ports
PORT VFBC_CMD_CLK = cmd_clk, DIR = O, BUS = VFBC_OUT
PORT VFBC_CMD_RESET = cmd_reset, DIR = O, BUS = VFBC_OUT
PORT VFBC_CMD_DATA = cmd_data, DIR = O, BUS = VFBC_OUT, VEC = [31:0]
PORT VFBC_CMD_WRITE = cmd_write, DIR = O, BUS = VFBC_OUT
PORT VFBC_CMD_END = cmd_end, DIR = O, BUS = VFBC_OUT
PORT VFBC_CMD_FULL = cmd_full, DIR = I, BUS = VFBC_OUT
PORT VFBC_CMD_ALMOST_FULL = cmd_almost_full, DIR = I, BUS = VFBC_OUT
PORT VFBC_CMD_IDLE = cmd_idle, DIR = I, BUS = VFBC_OUT
# VFBC Read FIFO Ports
#PORT VFBC_RD_CLK = rd_clk, DIR = O, BUS = VFBC_OUT
#PORT VFBC_RD_RESET = rd_reset, DIR = O, BUS = VFBC_OUT
#PORT VFBC_RD_READ = rd_read, DIR = O, BUS = VFBC_OUT
#PORT VFBC_RD_END_BURST = rd_end_burst, DIR = O, BUS = VFBC_OUT
#PORT VFBC_RD_FLUSH = rd_flush, DIR = O, BUS = VFBC_OUT
#PORT VFBC_RD_DATA = rd_data, DIR = I, BUS = VFBC_OUT, VEC = [C_VFBC_RDWD_DATA_WIDTH-1:0]
#PORT VFBC_RD_EMPTY = rd_empty, DIR = I, BUS = VFBC_OUT
#PORT VFBC_RD_ALMOST_EMPTY = rd_almost_empty, DIR = I, BUS = VFBC_OUT
# VFBC Write FIFO Ports
PORT VFBC_WD_CLK = wd_clk, DIR = O, BUS = VFBC_OUT
PORT VFBC_WD_RESET = wd_reset, DIR = O, BUS = VFBC_OUT
PORT VFBC_WD_WRITE = wd_write, DIR = O, BUS = VFBC_OUT
PORT VFBC_WD_END_BURST = wd_end_burst, DIR = O, BUS = VFBC_OUT
PORT VFBC_WD_FLUSH = wd_flush, DIR = O, BUS = VFBC_OUT
PORT VFBC_WD_DATA = wd_data, DIR = O, BUS = VFBC_OUT, VEC = [C_VFBC_RDWD_DATA_WIDTH-1:0]
PORT VFBC_WD_DATA_BE = wd_data_be, DIR = O, BUS = VFBC_OUT, VEC = [C_VFBC_RDWD_DATA_WIDTH/8-1:0]
PORT VFBC_WD_FULL = wd_full, DIR = I, BUS = VFBC_OUT
PORT VFBC_WD_ALMOST_FULL = wd_almost_full, DIR = I, BUS = VFBC_OUT

#Camera Ports
PORT CAM_MCLK = mclk, DIR = O, BUS = VMODCAM_IN
PORT CAM_RST_N = rst_n, DIR = O, BUS = VMODCAM_IN
PORT CAM_POWERDOWN = powerdown, DIR = O, BUS = VMODCAM_IN
PORT CAM_PCLK = pclk, DIR = I, BUS = VMODCAM_IN
PORT CAM_FV = fv, DIR = I, BUS = VMODCAM_IN
PORT CAM_LV = lv, DIR = I, BUS = VMODCAM_IN
PORT CAM_DATA = data, DIR = I, BUS = VMODCAM_IN, VEC = [7:0]

END












